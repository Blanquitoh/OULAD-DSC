// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OuladEtlEda;

#nullable disable

namespace OuladEtlEda.Migrations
{
    [DbContext(typeof(OuladContext))]
    [Migration("20250609005753_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OuladEtlEda.Models.Assessment", b =>
                {
                    b.Property<int>("IdAssessment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAssessment"));

                    b.Property<string>("AssessmentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeModule")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("CodePresentation")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<int?>("Date")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("IdAssessment");

                    b.HasIndex("CodeModule", "CodePresentation");

                    b.ToTable("assessments");
                });

            modelBuilder.Entity("OuladEtlEda.Models.Course", b =>
                {
                    b.Property<string>("CodeModule")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnOrder(0);

                    b.Property<string>("CodePresentation")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnOrder(1);

                    b.Property<int>("ModulePresentationLength")
                        .HasColumnType("int");

                    b.HasKey("CodeModule", "CodePresentation");

                    b.ToTable("courses");
                });

            modelBuilder.Entity("OuladEtlEda.Models.StudentAssessment", b =>
                {
                    b.Property<int>("IdAssessment")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("IdStudent")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("CodeModule")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnOrder(2);

                    b.Property<string>("CodePresentation")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnOrder(3);

                    b.Property<int?>("DateSubmitted")
                        .HasColumnType("int");

                    b.Property<bool>("IsBanked")
                        .HasColumnType("bit");

                    b.Property<float?>("Score")
                        .HasColumnType("real");

                    b.HasKey("IdAssessment", "IdStudent", "CodeModule", "CodePresentation");

                    b.HasIndex("CodeModule", "CodePresentation", "IdStudent");

                    b.ToTable("studentAssessment");
                });

            modelBuilder.Entity("OuladEtlEda.Models.StudentInfo", b =>
                {
                    b.Property<string>("CodeModule")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnOrder(0);

                    b.Property<string>("CodePresentation")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnOrder(1);

                    b.Property<int>("IdStudent")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int>("AgeBand")
                        .HasColumnType("int");

                    b.Property<int>("Disability")
                        .HasColumnType("int");

                    b.Property<int>("FinalResult")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("HighestEducation")
                        .HasColumnType("int");

                    b.Property<string>("ImdBand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumOfPrevAttempts")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudiedCredits")
                        .HasColumnType("int");

                    b.HasKey("CodeModule", "CodePresentation", "IdStudent");

                    b.ToTable("studentInfo");
                });

            modelBuilder.Entity("OuladEtlEda.Models.StudentRegistration", b =>
                {
                    b.Property<string>("CodeModule")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnOrder(0);

                    b.Property<string>("CodePresentation")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnOrder(1);

                    b.Property<int>("IdStudent")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int?>("DateRegistration")
                        .HasColumnType("int");

                    b.Property<int?>("DateUnregistration")
                        .HasColumnType("int");

                    b.HasKey("CodeModule", "CodePresentation", "IdStudent");

                    b.ToTable("studentRegistration");
                });

            modelBuilder.Entity("OuladEtlEda.Models.StudentVle", b =>
                {
                    b.Property<int>("IdSite")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("IdStudent")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("CodeModule")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnOrder(2);

                    b.Property<string>("CodePresentation")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnOrder(3);

                    b.Property<int?>("Date")
                        .HasColumnType("int");

                    b.Property<int>("SumClick")
                        .HasColumnType("int");

                    b.HasKey("IdSite", "IdStudent", "CodeModule", "CodePresentation");

                    b.HasIndex("CodeModule", "CodePresentation", "IdStudent");

                    b.ToTable("studentVle");
                });

            modelBuilder.Entity("OuladEtlEda.Models.Vle", b =>
                {
                    b.Property<int>("IdSite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSite"));

                    b.Property<string>("ActivityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeModule")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("CodePresentation")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<int?>("WeekFrom")
                        .HasColumnType("int");

                    b.Property<int?>("WeekTo")
                        .HasColumnType("int");

                    b.HasKey("IdSite");

                    b.HasIndex("CodeModule", "CodePresentation");

                    b.ToTable("vle");
                });

            modelBuilder.Entity("OuladEtlEda.Models.Assessment", b =>
                {
                    b.HasOne("OuladEtlEda.Models.Course", "Course")
                        .WithMany("Assessments")
                        .HasForeignKey("CodeModule", "CodePresentation")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("OuladEtlEda.Models.StudentAssessment", b =>
                {
                    b.HasOne("OuladEtlEda.Models.Assessment", "Assessment")
                        .WithMany("StudentAssessments")
                        .HasForeignKey("IdAssessment")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OuladEtlEda.Models.StudentInfo", "StudentInfo")
                        .WithMany("Assessments")
                        .HasForeignKey("CodeModule", "CodePresentation", "IdStudent")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Assessment");

                    b.Navigation("StudentInfo");
                });

            modelBuilder.Entity("OuladEtlEda.Models.StudentInfo", b =>
                {
                    b.HasOne("OuladEtlEda.Models.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CodeModule", "CodePresentation")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("OuladEtlEda.Models.StudentRegistration", b =>
                {
                    b.HasOne("OuladEtlEda.Models.Course", "Course")
                        .WithMany("Registrations")
                        .HasForeignKey("CodeModule", "CodePresentation")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OuladEtlEda.Models.StudentInfo", "StudentInfo")
                        .WithMany("Registrations")
                        .HasForeignKey("CodeModule", "CodePresentation", "IdStudent")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("StudentInfo");
                });

            modelBuilder.Entity("OuladEtlEda.Models.StudentVle", b =>
                {
                    b.HasOne("OuladEtlEda.Models.Vle", "Vle")
                        .WithMany("StudentVles")
                        .HasForeignKey("IdSite")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OuladEtlEda.Models.StudentInfo", "StudentInfo")
                        .WithMany("StudentVles")
                        .HasForeignKey("CodeModule", "CodePresentation", "IdStudent")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StudentInfo");

                    b.Navigation("Vle");
                });

            modelBuilder.Entity("OuladEtlEda.Models.Vle", b =>
                {
                    b.HasOne("OuladEtlEda.Models.Course", "Course")
                        .WithMany("Vles")
                        .HasForeignKey("CodeModule", "CodePresentation")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("OuladEtlEda.Models.Assessment", b =>
                {
                    b.Navigation("StudentAssessments");
                });

            modelBuilder.Entity("OuladEtlEda.Models.Course", b =>
                {
                    b.Navigation("Assessments");

                    b.Navigation("Registrations");

                    b.Navigation("Students");

                    b.Navigation("Vles");
                });

            modelBuilder.Entity("OuladEtlEda.Models.StudentInfo", b =>
                {
                    b.Navigation("Assessments");

                    b.Navigation("Registrations");

                    b.Navigation("StudentVles");
                });

            modelBuilder.Entity("OuladEtlEda.Models.Vle", b =>
                {
                    b.Navigation("StudentVles");
                });
#pragma warning restore 612, 618
        }
    }
}
